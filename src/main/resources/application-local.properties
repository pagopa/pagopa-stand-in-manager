# Info
info.properties.environment=local
# Logging
logging.level.root=INFO
logging.level.it.gov.pagopa=INFO
# CORS configuration
cors.configuration={"origins": ["*"], "methods": ["*"]}

spring.datasource.url=jdbc:postgresql://pagopa-d-weu-nodo-flexible-postgresql.postgres.database.azure.com:6432/nodo?prepareThreshold=0
spring.datasource.username=cfg
spring.datasource.password=password

api-config-cache.base-path=https://api.dev.platform.pagopa.it/api-config-cache/p/v1
api-config-cache.api-key=${API_CONFIG_CACHE_API_KEY}

dataexplorer.url=${DATAEXPLORER_URL:http://localhost:8880}
dataexplorer.clientId=
dataexplorer.appKey=
dataexplorer.dbName=NetDefaultDB

cosmos.endpoint=${COSMOS_ENDPOINT}
cosmos.key=${COSMOS_KEY}

forwarder.url=https://api.dev.platform.pagopa.it/pagopa-node-forwarder/api/v1/forward
forwarder.key=${FORWARDER_KEY}

adder.slot.minutes=5
adder.slot.fault.threshold=50
adder.range.minutes=30
adder.range.fault.threshold=50
adder.total.daytime.traffic.threshold=5
adder.total.nighttime.traffic.threshold=10

nighttime.start.hours=22
nighttime.start.minutes=0
nighttime.end.hours=6
nighttime.end.minutes=0

remover.range.minutes=12
remover.range.fault.limit=6

aws.region=weu
aws.ses.user=noreply@pagopa.it
aws.mailto=test@pagopa.it

excludedStations=""

config.refresh.cron=  */10 * * * * *
nodo.monitor.cron=    */10 * * * * *
nodo.calc.cron=       */10 * * * * *
station.monitor.cron= */10 * * * * *
station.calc.cron=    */10 * * * * *

logging.level.it.gov.pagopa.standinmanager.service=DEBUG

#EventHub
nodo-dei-pagamenti-stand-in-tx-connection-string=${STAND_IN_TX_CONNECTION_STRING}
nodo-dei-pagamenti-stand-in-tx-name=${STAND_IN_TX_NAME:nodo-dei-pagamenti-stand-in}

saveDB=false
sendEvent=true